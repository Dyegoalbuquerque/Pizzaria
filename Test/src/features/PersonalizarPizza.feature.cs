// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Test.Src.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Personalizar pizza")]
    public partial class PersonalizarPizzaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PersonalizarPizza.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-br"), "Personalizar pizza", "        Sendo um cliente​ ​do sistema da pizzaria UDS, eu quero personalizar a mi" +
                    "nha pizza. \n        O objetivo da personalização é tornar a minha pizza única.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Personalizar pizza com adicionais")]
        public virtual void PersonalizarPizzaComAdicionais()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Personalizar pizza com adicionais", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
        testRunner.Given("um cliente que montou sua pizza com tamanho e sabor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 15
        testRunner.And("que personalizou seu pedido adicionando itens tornando única pizza", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
        testRunner.When("sistema salva a personalizacao do pedido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
        testRunner.Then("o pedido é salvo com todas as personalizações escolhidas bem como adicional de pr" +
                    "eço e tempo de preparo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 18
        testRunner.And("os valores e tempos adicionais devem ser somados no total do pedido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Personalizar pizza sem adicionais")]
        public virtual void PersonalizarPizzaSemAdicionais()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Personalizar pizza sem adicionais", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
        testRunner.Given("um cliente que montou sua pizza com tamanho e sabor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 22
        testRunner.When("sistema salva o pedido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 23
        testRunner.Then("o pedido é salvo sem adicionais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 24
        testRunner.And("com o mesmo valor e tempo de preparo da montagem da pizza", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
